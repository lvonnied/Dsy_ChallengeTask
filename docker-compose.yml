services:
  traefik:
    image: traefik:v2.6.6
    restart: always
    command:
      - --api.insecure=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
  postgres:
    image: postgres:14.2-alpine
    restart: always
    container_name: postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASS}
    ports:
      - 5432:5432
    volumes:
      - ./database.sql:/docker-entrypoint-initdb.d/database.sql
      - postgres:/var/lib/postgresql/data
  backend:
    build:
      context: ./backend
    deploy:
      mode: replicated
      replicas: 2
    command: npm start
    ports:
      - 3001-3002
    labels:
      - traefik.enable=true
      - traefik.http.routers.web.rule=Host(`backend.localhost`)
      - traefik.http.routers.web.entrypoints=web
      - traefik.http.services.web-service.loadbalancer.server.port=3001
    depends_on:
      - postgres
      - traefik
  client:
    build:
      context: ./client
    volumes:
      - /app
      - /app/node_modules
    ports:
      - 3000:3000

volumes:
  postgres:
